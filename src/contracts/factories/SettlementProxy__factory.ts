/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SettlementProxy,
  SettlementProxyInterface,
} from "../SettlementProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_oldImplementation",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "ImplementationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR1",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR2",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RBTC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WRBTC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "canceledOfHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "filledAmountInOfHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProxyOwner",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderBookAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderBookMarginAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setProxyOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sovrynSwapNetwork",
    outputs: [
      {
        internalType: "contract ISovrynSwapNetwork",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006b565b6000805462010000600160b01b031916620100006001600160a01b03841690810291909117825560405192935091600080516020610a9a833981519152908290a3506100663361006f565b61010e565b3390565b6001600160a01b0381166100b45760405162461bcd60e51b8152600401808060200182810382526025815260200180610aba6025913960400191505060405180910390fd5b6001600160a01b0381166100c66100fb565b6001600160a01b0316600080516020610a9a83398151915260405160405180910390a3600080516020610a7a83398151915255565b600080516020610a7a8339815191525490565b61095d8061011d6000396000f3fe6080604052600436106101175760003560e01c80638da5cb5b116100a0578063caaee91c11610064578063caaee91c146102f0578063d784d42614610323578063e2517aea14610356578063ef1774a21461036b578063f2fde38b1461038057610138565b80638da5cb5b1461025e5780638f32d59b146102735780639409d8701461029c578063aaf10f42146102b1578063c276d7e2146102c657610138565b8063685f93bd116100e7578063685f93bd146101c257806370a08231146101ec57806379eaf6d41461021f5780637a25914c14610234578063841f375e1461024957610138565b8062c5ddfb146101405780631ab7710d1461017157806324ec75901461018657806334093126146101ad57610138565b36610138576008546001600160a01b03163314610136576101366103b3565b005b6101366103b3565b34801561014c57600080fd5b50610155610429565b604080516001600160a01b039092168252519081900360200190f35b34801561017d57600080fd5b50610155610438565b34801561019257600080fd5b5061019b61045d565b60408051918252519081900360200190f35b3480156101b957600080fd5b5061019b610463565b3480156101ce57600080fd5b5061019b600480360360208110156101e557600080fd5b5035610469565b3480156101f857600080fd5b5061019b6004803603602081101561020f57600080fd5b50356001600160a01b031661047b565b34801561022b57600080fd5b5061015561048d565b34801561024057600080fd5b5061019b61049c565b34801561025557600080fd5b506101556104a2565b34801561026a57600080fd5b506101556104b1565b34801561027f57600080fd5b506102886104c6565b604080519115158252519081900360200190f35b3480156102a857600080fd5b506101556104f0565b3480156102bd57600080fd5b506101556104ff565b3480156102d257600080fd5b50610288600480360360208110156102e957600080fd5b5035610524565b3480156102fc57600080fd5b506101366004803603602081101561031357600080fd5b50356001600160a01b0316610539565b34801561032f57600080fd5b506101366004803603602081101561034657600080fd5b50356001600160a01b03166105aa565b34801561036257600080fd5b50610155610618565b34801561037757600080fd5b5061019b610627565b34801561038c57600080fd5b50610136600480360360208110156103a357600080fd5b50356001600160a01b031661062d565b60006103bd6104ff565b90506001600160a01b0381166104045760405162461bcd60e51b81526004018080602001828103825260238152602001806108e06023913960400191505060405180910390fd5b60405136600082376000803683855af43d806000843e818015610425578184f35b8184fd5b600b546001600160a01b031681565b7fb5f6074d2b374487ffe12d401cf0891c7591a84c4944ef117f69d13b80c4d6d85490565b600d5481565b60025481565b60056020526000908152604090205481565b60066020526000908152604090205481565b6009546001600160a01b031681565b60015481565b6008546001600160a01b031681565b6000546201000090046001600160a01b031690565b600080546201000090046001600160a01b03166104e161067e565b6001600160a01b031614905090565b600a546001600160a01b031681565b7f950d7e977b74051843ed988c77d53a700cd967d2ac5480d98dd4c1edaf0b4dc85490565b60046020526000908152604090205460ff1681565b610541610438565b6001600160a01b0316336001600160a01b03161461059e576040805162461bcd60e51b8152602060048201526015602482015274141c9bde1e4e8e881858d8d95cdcc819195b9a5959605a1b604482015290519081900360640190fd5b6105a781610682565b50565b6105b2610438565b6001600160a01b0316336001600160a01b03161461060f576040805162461bcd60e51b8152602060048201526015602482015274141c9bde1e4e8e881858d8d95cdcc819195b9a5959605a1b604482015290519081900360640190fd5b6105a781610732565b6007546001600160a01b031681565b600c5481565b6106356104c6565b610675576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b6105a7816107e2565b3390565b6001600160a01b0381166106c75760405162461bcd60e51b81526004018080602001828103825260258152602001806109036025913960400191505060405180910390fd5b806001600160a01b03166106d9610438565b6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a37fb5f6074d2b374487ffe12d401cf0891c7591a84c4944ef117f69d13b80c4d6d855565b6001600160a01b0381166107775760405162461bcd60e51b81526004018080602001828103825260298152602001806108b76029913960400191505060405180910390fd5b806001600160a01b03166107896104ff565b6001600160a01b03167fcfbf4028add9318bbf716f08c348595afb063b0e9feed1f86d33681a4b3ed4d360405160405180910390a37f950d7e977b74051843ed988c77d53a700cd967d2ac5480d98dd4c1edaf0b4dc855565b6001600160a01b0381166108275760405162461bcd60e51b81526004018080602001828103825260268152602001806108916026913960400191505060405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b03909216620100000262010000600160b01b031990921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737350726f78793a3a736574496d706c656d656e746174696f6e3a20696e76616c6964206164647265737350726f78793a3a28293a20696d706c656d656e746174696f6e206e6f7420666f756e6450726f78793a3a73657450726f78794f776e65723a20696e76616c69642061646472657373a2646970667358221220940bb86fe66d92fa9e382f4e374dde0f48a1e9046418280acd7f79274e045f1164736f6c634300060c0033b5f6074d2b374487ffe12d401cf0891c7591a84c4944ef117f69d13b80c4d6d88be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e050726f78793a3a73657450726f78794f776e65723a20696e76616c69642061646472657373";

export class SettlementProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SettlementProxy> {
    return super.deploy(overrides || {}) as Promise<SettlementProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SettlementProxy {
    return super.attach(address) as SettlementProxy;
  }
  connect(signer: Signer): SettlementProxy__factory {
    return super.connect(signer) as SettlementProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SettlementProxyInterface {
    return new utils.Interface(_abi) as SettlementProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SettlementProxy {
    return new Contract(address, _abi, signerOrProvider) as SettlementProxy;
  }
}
