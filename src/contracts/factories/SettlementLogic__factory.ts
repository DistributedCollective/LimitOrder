/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SettlementLogic,
  SettlementLogicInterface,
} from "../SettlementLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeSplitTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "MarginOrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leverageAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "loanTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "loanTokenSent",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralTokenSent",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collateralTokenAddress",
        type: "address",
      },
    ],
    name: "MarginOrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "loanTokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collateralTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leverageAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralTokenSent",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "principalAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "MarginTrade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
    ],
    name: "OrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "SetMinFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "SetRelayerFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sourceToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_targetToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_sourceTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_targetTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR1",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR2",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RBTC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WRBTC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allCanceledHashes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "loanToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveTokenLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "loanId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "leverageAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "loanTokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "loanTokenSent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateralTokenSent",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collateralTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minEntryPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "loanDataBytes",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct MarginOrders.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancelMarginOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "fromToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "toToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "created",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct Orders.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "canceledOfHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "hashes",
        type: "bytes32[]",
      },
    ],
    name: "checkCanceledHashes",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
        ],
        internalType: "struct ISettlement.CanceledCheck[]",
        name: "result",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "hashes",
        type: "bytes32[]",
      },
    ],
    name: "checkFilledAmountHashes",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ISettlement.FilledAmountCheck[]",
        name: "result",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "loanId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "leverageAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "loanTokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "loanTokenSent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralTokenSent",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "collateralTokenAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "trader",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "minEntryPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "loanDataBytes",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createdTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct MarginOrders.Order",
            name: "order",
            type: "tuple",
          },
        ],
        internalType: "struct ISettlement.FillMarginOrderArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "fillMarginOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "principalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "loanId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "leverageAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "loanTokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "loanTokenSent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralTokenSent",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "collateralTokenAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "trader",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "minEntryPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "loanDataBytes",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createdTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct MarginOrders.Order",
            name: "order",
            type: "tuple",
          },
        ],
        internalType: "struct ISettlement.FillMarginOrderArgs[]",
        name: "args",
        type: "tuple[]",
      },
    ],
    name: "fillMarginOrders",
    outputs: [
      {
        internalType: "uint256[]",
        name: "principalAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "collateralAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "maker",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "toToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "created",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Orders.Order",
            name: "order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amountToFillIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToFillOut",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "path",
            type: "address[]",
          },
        ],
        internalType: "struct ISettlement.FillOrderArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "fillOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "maker",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "toToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "created",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Orders.Order",
            name: "order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amountToFillIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountToFillOut",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "path",
            type: "address[]",
          },
        ],
        internalType: "struct ISettlement.FillOrderArgs[]",
        name: "args",
        type: "tuple[]",
      },
    ],
    name: "fillOrders",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "filledAmountInOfHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderBookChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_orderBookAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginOrderBookAddress",
        type: "address",
      },
      {
        internalType: "contract ISovrynSwapNetwork",
        name: "_sovrynSwapNetwork",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WRBTC",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderBookAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderBookMarginAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minFee",
        type: "uint256",
      },
    ],
    name: "setMinFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_relayerFeePercent",
        type: "uint256",
      },
    ],
    name: "setRelayerFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sovrynSwapNetwork",
    outputs: [
      {
        internalType: "contract ISovrynSwapNetwork",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060006200001e62000078565b6000805462010000600160b01b031916620100006001600160a01b038416908102919091178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506200007c565b3390565b613d92806200008c6000396000f3fe6080604052600436106101d05760003560e01c8063841f375e116100f7578063ac64123911610095578063e2517aea11610064578063e2517aea14610549578063ef1774a21461055e578063f2fde38b14610573578063f340fa0114610593576101f2565b8063ac641239146104af578063bdebd94c146104dc578063be49aa6014610509578063c276d7e214610529576101f2565b80638f32d59b116100d15780638f32d59b1461042a5780639409d8701461044c578063940cbf8b14610461578063a88d295414610481576101f2565b8063841f375e146103d2578063894f1d88146103e75780638da5cb5b14610415576101f2565b80633c641b921161016f57806379eaf6d41161013e57806379eaf6d41461035b5780637a25914c146103705780637a6bb7791461038557806383302a6f146103b2576101f2565b80633c641b92146102db5780634cf4c3bb146102fb578063685f93bd1461031b57806370a082311461033b576101f2565b80633090fceb116101ab5780633090fceb1461026457806331ac99201461028657806334093126146102a65780633641e083146102bb576101f2565b8062c5ddfb146101f757806324ec7590146102225780632e1a7d4d14610244576101f2565b366101f2576008546001600160a01b031633146101f0576101f0336105a1565b005b600080fd5b34801561020357600080fd5b5061020c610638565b60405161021991906131eb565b60405180910390f35b34801561022e57600080fd5b50610237610647565b60405161021991906133e1565b34801561025057600080fd5b506101f061025f366004612fff565b61064d565b34801561027057600080fd5b5061027961073f565b60405161021991906132be565b34801561029257600080fd5b506101f06102a1366004612fff565b610797565b3480156102b257600080fd5b50610237610803565b3480156102c757600080fd5b506101f06102d63660046130b5565b610809565b3480156102e757600080fd5b506101f06102f6366004612d6c565b610a26565b34801561030757600080fd5b506101f0610316366004613065565b610a63565b34801561032757600080fd5b50610237610336366004612fff565b610b7c565b34801561034757600080fd5b50610237610356366004612d34565b610b8e565b34801561036757600080fd5b5061020c610ba0565b34801561037c57600080fd5b50610237610baf565b34801561039157600080fd5b506103a56103a0366004612e44565b610bb5565b6040516102199190613353565b3480156103be57600080fd5b506101f06103cd366004612fff565b610c7d565b3480156103de57600080fd5b5061020c610d06565b3480156103f357600080fd5b50610407610402366004612ec7565b610d15565b6040516102199291906133a8565b34801561042157600080fd5b5061020c610e47565b34801561043657600080fd5b5061043f610e5c565b60405161021991906133d6565b34801561045857600080fd5b5061020c610e86565b34801561046d57600080fd5b506101f061047c366004613081565b610e95565b34801561048d57600080fd5b506104a161049c366004613017565b610ff6565b604051610219929190613c4e565b3480156104bb57600080fd5b506104cf6104ca366004612e44565b6112f2565b6040516102199190613302565b3480156104e857600080fd5b506104fc6104f7366004612f65565b6113c3565b6040516102199190613395565b34801561051557600080fd5b50610237610524366004613033565b611492565b34801561053557600080fd5b5061043f610544366004612fff565b611a7f565b34801561055557600080fd5b5061020c611a94565b34801561056a57600080fd5b50610237611aa3565b34801561057f57600080fd5b506101f061058e366004612d34565b611aa9565b6101f06105a1366004612d34565b34806105c85760405162461bcd60e51b81526004016105bf906137e0565b60405180910390fd5b336001600160a01b038316156105db5750815b6001600160a01b03811660009081526006602052604090819020805484019055517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9061062b90859085906131ff565b60405180910390a1505050565b600b546001600160a01b031681565b600d5481565b3360008181526006602052604090205482111561067c5760405162461bcd60e51b81526004016105bf90613817565b6001600160a01b038116600081815260066020526040808220805486900390555190919084906106ab906131e8565b60006040518083038185875af1925050503d80600081146106e8576040519150601f19603f3d011682016040523d82523d6000602084013e6106ed565b606091505b505090508061070e5760405162461bcd60e51b81526004016105bf90613957565b7f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65828460405161062b9291906131ff565b6060600380548060200260200160405190810160405280929190818152602001828054801561078d57602002820191906000526020600020905b815481526020019060010190808311610779575b5050505050905090565b61079f610e5c565b6107bb5760405162461bcd60e51b81526004016105bf906139f9565b600d80549082905560405133907f08196f7f7230436b11e930eb60885421111df561c1ba4f136c68ca59838c1b66906107f79084908690613c4e565b60405180910390a25050565b60025481565b610811610e5c565b61082d5760405162461bcd60e51b81526004016105bf906139f9565b600054610100900460ff1680610846575060005460ff16155b6108625760405162461bcd60e51b81526004016105bf9061389c565b600054610100900460ff1615801561088d576000805460ff1961ff0019909116610100171660011790555b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f84ec3e40ac87b7e93d40b42ac60cbcf224a757106614dac5eb0cc5fc9be1f03c7fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc68888604051602001610906959493929190613437565b60408051601f19818403018152908290528051602091820120600155610996917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f917fc3d2193d7dc1c02a389e4c7ff50299645338a7ae45c7a25b141b7be6720567cf917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6918b918a9101613437565b60408051601f198184030181529190528051602090910120600255600980546001600160a01b038086166001600160a01b03199283161790925560088054858416908316179055600a8054888416908316179055600b805492871692909116919091179055610a0c6702c68af0bb140000610c7d565b8015610a1e576000805461ff00191690555b505050505050565b610a2e610e5c565b610a4a5760405162461bcd60e51b81526004016105bf906139f9565b610a5e6001600160a01b0383168483611ad9565b505050565b6000610a6e82611bd3565b90506000610a9060025483856101600151866101800151876101a00151611c68565b9050610aa0818460c00151611c8e565b610abc5760405162461bcd60e51b81526004016105bf9061373e565b8260c001516001600160a01b0316336001600160a01b031614610af15760405162461bcd60e51b81526004016105bf90613617565b600082815260046020526040808220805460ff1916600190811790915560038054918201815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0184905560c085015190516001600160a01b039091169184917f9cff20d6e1216f47d7c24f5477b7eaf4ced437d8c33bc5c1466a14aca051271a9190a3505050565b60056020526000908152604090205481565b60066020526000908152604090205481565b6009546001600160a01b031681565b60015481565b606081516001600160401b0381118015610bce57600080fd5b50604051908082528060200260200182016040528015610c0857816020015b610bf56129f8565b815260200190600190039081610bed5790505b50905060005b8251811015610c77576000838281518110610c2557fe5b6020026020010151905060405180604001604052808281526020016005600084815260200190815260200160002054815250838381518110610c6357fe5b602090810291909101015250600101610c0e565b50919050565b610c85610e5c565b610ca15760405162461bcd60e51b81526004016105bf906139f9565b68056bc75e2d63100000811115610cca5760405162461bcd60e51b81526004016105bf90613845565b600c80549082905560405133907f6ee29308df0b96cc1575b1844b6bb52fc5642340775c3e5c477282c3aee6e349906107f79084908690613c4e565b6008546001600160a01b031681565b606080600083516001600160401b0381118015610d3157600080fd5b50604051908082528060200260200182016040528015610d5b578160200160208202803683370190505b50925083516001600160401b0381118015610d7557600080fd5b50604051908082528060200260200182016040528015610d9f578160200160208202803683370190505b50915060005b8451811015610e2357610dca858281518110610dbd57fe5b6020026020010151610ff6565b858381518110610dd657fe5b60200260200101858481518110610de957fe5b60200260200101828152508281525050506000848281518110610e0857fe5b60200260200101511115610e1b57600191505b600101610da5565b5080610e415760405162461bcd60e51b81526004016105bf90613a9a565b50915091565b6000546201000090046001600160a01b031690565b600080546201000090046001600160a01b0316610e77611ceb565b6001600160a01b031614905090565b600a546001600160a01b031681565b6000610ea082611cef565b90506000610ec260015483856101000151866101200151876101400151611c68565b9050610ed2818460000151611c8e565b610eee5760405162461bcd60e51b81526004016105bf9061373e565b82516001600160a01b03163314610f175760405162461bcd60e51b81526004016105bf90613617565b60008281526004602090815260408220805460ff191660019081179091556003805491820181559092527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909101839055600854908401516001600160a01b039081169116148015610fa65750606083015183516001600160a01b031660009081526006602052604090205410155b15610fb857610fb8836060015161064d565b82516040516001600160a01b039091169083907fae41337bd1e05e429fc52474ce72902a09610e71a4c57c5f18741b69b4f60f0990600090a3505050565b6000803332146110185760405162461bcd60e51b81526004016105bf90613a46565b60006110278460000151611bd3565b90506110338482611d52565b835160c08101516002546101608301516101808401516101a0909401519293600093611063939287929091611c68565b905061106f8183611c8e565b61108b5760405162461bcd60e51b81526004016105bf9061373e565b60008060008061109e8a60000151611dd7565b935093509350935060008a6000015160a00151905060008b60000151604001516001600160a01b031663797bf3856040518163ffffffff1660e01b815260040160206040518083038186803b1580156110f657600080fd5b505afa15801561110a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112e9190612d50565b8c51608001519091501561115a578b516080015161115a906001600160a01b038416908a903090612002565b8b516060015115611183578b5160600151611183906001600160a01b038316908a903090612002565b8b51611190908486612029565b809b50819c5050508b6000015160a001516001600160a01b03168c60000151604001516001600160a01b03167fee3e7d75896ef6d41fca2ee701efb7acc57c88734d898da78caff6233faf31b58e6000015160200151878f8f8e6040516111fb959493929190613437565b60405180910390a3851561121d5761121d6001600160a01b0383163388612138565b8415611237576112376001600160a01b0382163387612138565b8b51606081015160809091015160008b81526005602052604090205461125f92909101612157565b60008a815260056020526040902055611276612a0f565b8c6000015190508060c001516001600160a01b03168a7f2307f3a906ed2f1436ea85faf6cb3e88ce874589115bf96b7b289becba6cfa578e8e85602001518660400151876060015188608001518960a001516040516112db9796959493929190613c9a565b60405180910390a350505050505050505050915091565b606081516001600160401b038111801561130b57600080fd5b5060405190808252806020026020018201604052801561134557816020015b6113326129f8565b81526020019060019003908161132a5790505b50905060005b8251811015610c7757600083828151811061136257fe5b6020026020010151905060405180604001604052808281526020016004600084815260200190815260200160002060009054906101000a900460ff1615158152508383815181106113af57fe5b60209081029190910101525060010161134b565b6060600082516001600160401b03811180156113de57600080fd5b50604051908082528060200260200182016040528015611408578160200160208202803683370190505b50915060005b83518110156114745761143384828151811061142657fe5b6020026020010151611492565b83828151811061143f57fe5b602002602001018181525050600083828151811061145957fe5b6020026020010151111561146c57600191505b60010161140e565b5080610c775760405162461bcd60e51b81526004016105bf90613a9a565b60003332146114b35760405162461bcd60e51b81526004016105bf90613a46565b6060820151805181906000906114c557fe5b60200260200101516001600160a01b03168360000151602001516001600160a01b0316146115055760405162461bcd60e51b81526004016105bf90613a72565b8060018251038151811061151557fe5b60200260200101516001600160a01b03168360000151604001516001600160a01b0316146115555760405162461bcd60e51b81526004016105bf906138ea565b60006115648460000151611cef565b9050611570848261217c565b600061159c60015483876000015161010001518860000151610120015189600001516101400151611c68565b8551519091506115ad908290611c8e565b6115c95760405162461bcd60e51b81526004016105bf9061373e565b60006115f768056bc75e2d631000006115f1600c54896020015161221390919063ffffffff16565b9061224d565b905061160b8187600001516020015161228f565b602086015160009061161d90836123da565b600954604051637f9c0ecd60e01b81529192506000916001600160a01b0390911690637f9c0ecd906116559089908690600401613256565b60206040518083038186803b15801561166d57600080fd5b505afa158015611681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a5919061309d565b905087604001518110156116cb5760405162461bcd60e51b81526004016105bf90613c17565b60085486516001600160a01b0390911690819088906000906116e957fe5b60200260200101516001600160a01b031614156117c6576020808a01518a51516001600160a01b03166000908152600690925260409091205410156117405760405162461bcd60e51b81526004016105bf90613817565b806001600160a01b031663d0e30db08a602001516040518263ffffffff1660e01b81526004016000604051808303818588803b15801561177f57600080fd5b505af1158015611793573d6000803e3d6000fd5b5050505060208a8101518b51516001600160a01b0316600090815260069092526040909120805491909103905550611806565b611806896000015160000151308b602001518a6000815181106117e557fe5b60200260200101516001600160a01b0316612002909392919063ffffffff16565b885160a0015160085488516001600160a01b03909116908990600019810190811061182d57fe5b60200260200101516001600160a01b031614156118475750305b600080600061185c8b888f604001518761241c565b92509250925061188c8d60200151600560008d81526020019081526020016000205461215790919063ffffffff16565b600560008c815260200190815260200160002081905550809b506118d833898d6000815181106118b857fe5b60200260200101516001600160a01b03166121389092919063ffffffff16565b6008546001600160a01b03838116911614156119d257604051632e1a7d4d60e01b81526001600160a01b03861690632e1a7d4d9061191a9084906004016133e1565b600060405180830381600087803b15801561193457600080fd5b505af1158015611948573d6000803e3d6000fd5b5050505060008d6000015160a001516001600160a01b03168260405161196d906131e8565b60006040518083038185875af1925050503d80600081146119aa576040519150601f19603f3d011682016040523d82523d6000602084013e6119af565b606091505b50509050806119d05760405162461bcd60e51b81526004016105bf90613983565b505b816001600160a01b0316836001600160a01b03167fb39c9bc43f811e1a7ce159c5f147458fdb80266bf23c17322013316e27e086d0898433604051611a1993929190613c5c565b60405180910390a38c60000151600001516001600160a01b03168a7f8852456dac981d7593ee21188f2ed730a89f7f95a05005f0012b7e76f541db55898f8f604051611a6793929190613c7b565b60405180910390a35050505050505050505050919050565b60046020526000908152604090205460ff1681565b6007546001600160a01b031681565b600c5481565b611ab1610e5c565b611acd5760405162461bcd60e51b81526004016105bf906139f9565b611ad6816125e1565b50565b801580611b615750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90611b0f9030908690600401613218565b60206040518083038186803b158015611b2757600080fd5b505afa158015611b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5f919061309d565b155b611b7d5760405162461bcd60e51b81526004016105bf90613b8a565b610a5e8363095ea7b360e01b8484604051602401611b9c9291906131ff565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612670565b60007f081065ed5fb223d1fbe21ab1bb041dfac552070112cff5e8d4be7dada1f96cd6826000015183602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c6101400151604051602001611c4b9c9b9a99989796959493929190613463565b604051602081830303815290604052805190602001209050919050565b600080611c758787612755565b9050611c8381868686612788565b979650505050505050565b6000816001600160a01b0316836001600160a01b0316148015611cce575073dcc703c0e500b653ca82273b7bfad8045d85a4706001600160a01b03841614155b8015611ce257506001600160a01b03831615155b90505b92915050565b3390565b60007fd6dcdb8a8034d5997072fdf38e109521eb631713bc0470668aa787bb502b623c826000015183602001518460400151856060015186608001518760a001518860c001518960e00151604051602001611c4b999897969594939291906133ea565b81516101200151421115611d785760405162461bcd60e51b81526004016105bf90613a1f565b60008181526004602052604090205460ff1615611da75760405162461bcd60e51b81526004016105bf9061368a565b60008181526005602052604090205415611dd35760405162461bcd60e51b81526004016105bf90613b62565b5050565b60808101516000908190819081908015611e1c57611e0d68056bc75e2d631000006115f1600c548461221390919063ffffffff16565b9450611e1981866123da565b92505b606086015160008115611fe857611e4b68056bc75e2d631000006115f1600c548561221390919063ffffffff16565b9550611e5782876123da565b9350600088604001516001600160a01b031663797bf3856040518163ffffffff1660e01b815260040160206040518083038186803b158015611e9857600080fd5b505afa158015611eac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed09190612d50565b60095460a08b015160405163d734fa1960e01b81529293506060926001600160a01b039092169163d734fa1991611f0c91869190600401613218565b60006040518083038186803b158015611f2457600080fd5b505afa158015611f38573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f609190810190612dac565b600954604051637f9c0ecd60e01b81529192506001600160a01b031690637f9c0ecd90611f939084908c90600401613256565b60206040518083038186803b158015611fab57600080fd5b505afa158015611fbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fe3919061309d565b925050505b611ff88188018960a0015161228f565b5050509193509193565b612023846323b872dd60e01b858585604051602401611b9c93929190613232565b50505050565b6040808401518451602086015160a087015160c088015160e08901516101008a0151965160009788979660609661206b96919590948d948d94906024016134c8565b60408051601f198184030181529181526020820180516001600160e01b03166328a02f1960e01b179052519091506000906060906001600160a01b038516906120b59085906131b1565b6000604051808303816000865af19150503d80600081146120f2576040519150601f19603f3d011682016040523d82523d6000602084013e6120f7565b606091505b50915091508161211457805161210c57600080fd5b805181602001fd5b80806020019051810190612128919061311c565b909a909950975050505050505050565b610a5e8363a9059cbb60e01b8484604051602401611b9c9291906131ff565b600082820183811015611ce25760405162461bcd60e51b81526004016105bf90613707565b815160c001514211156121a15760405162461bcd60e51b81526004016105bf90613a1f565b60008181526004602052604090205460ff16156121d05760405162461bcd60e51b81526004016105bf9061368a565b815160600151602080840151600084815260059092526040909120546121f591612157565b1115611dd35760405162461bcd60e51b81526004016105bf90613b62565b60008261222257506000611ce5565b8282028284828161222f57fe5b0414611ce25760405162461bcd60e51b81526004016105bf906139b8565b6000611ce283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506127b0565b60085482906001600160a01b038381169116146123b95760095460085460405163d734fa1960e01b81526060926001600160a01b039081169263d734fa19926122de9288921690600401613218565b60006040518083038186803b1580156122f657600080fd5b505afa15801561230a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123329190810190612dac565b600954604051637f9c0ecd60e01b81529192506001600160a01b031690637f9c0ecd906123659084908890600401613256565b60206040518083038186803b15801561237d57600080fd5b505afa158015612391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123b5919061309d565b9150505b600d548111610a5e5760405162461bcd60e51b81526004016105bf906135c9565b6000611ce283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506127e7565b60008060006002875110156124435760405162461bcd60e51b81526004016105bf90613ac3565b8660008151811061245057fe5b602002602001015192508660018851038151811061246a57fe5b60200260200101519150816001600160a01b0316836001600160a01b031614156124a65760405162461bcd60e51b81526004016105bf906136b2565b60095460405163095ea7b360e01b81526001600160a01b038581169263095ea7b3926124da92909116908a906004016131ff565b602060405180830381600087803b1580156124f457600080fd5b505af1158015612508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061252c9190612fdf565b6125485760405162461bcd60e51b81526004016105bf9061386d565b60095460405163b77d239b60e01b81526001600160a01b039091169063b77d239b90612583908a908a908a908a906000908190600401613278565b602060405180830381600087803b15801561259d57600080fd5b505af11580156125b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125d5919061309d565b90509450945094915050565b6001600160a01b0381166126075760405162461bcd60e51b81526004016105bf90613644565b600080546040516001600160a01b03808516936201000090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b612682826001600160a01b0316612813565b61269e5760405162461bcd60e51b81526004016105bf90613be0565b60006060836001600160a01b0316836040516126ba91906131b1565b6000604051808303816000865af19150503d80600081146126f7576040519150601f19603f3d011682016040523d82523d6000602084013e6126fc565b606091505b50915091508161271e5760405162461bcd60e51b81526004016105bf90613769565b80511561202357808060200190518101906127399190612fdf565b6120235760405162461bcd60e51b81526004016105bf90613b18565b6000828260405160200161276a9291906131cd565b60405160208183030381529060405280519060200120905092915050565b60008060006127998787878761284f565b915091506127a68161292f565b5095945050505050565b600081836127d15760405162461bcd60e51b81526004016105bf9190613528565b5060008385816127dd57fe5b0495945050505050565b6000818484111561280b5760405162461bcd60e51b81526004016105bf9190613528565b505050900390565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061284757508115155b949350505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156128865750600090506003612926565b8460ff16601b1415801561289e57508460ff16601c14155b156128af5750600090506004612926565b6000600187878787604051600081526020016040526040516128d4949392919061350a565b6020604051602081039080840390855afa1580156128f6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661291f57600060019250925050612926565b9150600090505b94509492505050565b600081600481111561293d57fe5b141561294857611ad6565b600181600481111561295657fe5b14156129745760405162461bcd60e51b81526004016105bf9061355b565b600281600481111561298257fe5b14156129a05760405162461bcd60e51b81526004016105bf90613592565b60038160048111156129ae57fe5b14156129cc5760405162461bcd60e51b81526004016105bf9061379e565b60048160048111156129da57fe5b1415611ad65760405162461bcd60e51b81526004016105bf90613915565b604080518082019091526000808252602082015290565b604080516101c081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b8035611ce581613d47565b60006101c08284031215612aa0578081fd5b612aaa6020613cd6565b9050612ab68383612b96565b815292915050565b60006101c08284031215612ad0578081fd5b612ada6080613cd6565b9050612ae68383612c69565b815260206101608301358183015261018083013560408301526101a08301356001600160401b03811115612b1957600080fd5b8301601f81018513612b2a57600080fd5b8035612b3d612b3882613cfc565b613cd6565b8181528381019083850185840285018601891015612b5a57600080fd5b600094505b83851015612b8557612b718982612a83565b835260019490940193918501918501612b5f565b506060860152509295945050505050565b60006101c0808385031215612ba9578182fd5b612bb281613cd6565b9150508135815260208201356020820152612bd08360408401612a83565b60408201526060820135606082015260808201356080820152612bf68360a08401612a83565b60a0820152612c088360c08401612a83565b60c082015260e08281013590820152610100808301359082015261012080830135908201526101408083013590820152610160612c4784828501612d23565b9082015261018082810135908201526101a09182013591810191909152919050565b6000610160808385031215612c7c578182fd5b612c8581613cd6565b915050612c928383612a83565b8152612ca18360208401612a83565b6020820152612cb38360408401612a83565b60408201526060820135606082015260808201356080820152612cd98360a08401612a83565b60a082015260c082013560c082015260e082013560e0820152610100612d0184828501612d23565b9082015261012082810135908201526101409182013591810191909152919050565b803560ff81168114611ce557600080fd5b600060208284031215612d45578081fd5b8135611ce281613d47565b600060208284031215612d61578081fd5b8151611ce281613d47565b600080600060608486031215612d80578182fd5b8335612d8b81613d47565b92506020840135612d9b81613d47565b929592945050506040919091013590565b60006020808385031215612dbe578182fd5b82516001600160401b03811115612dd3578283fd5b8301601f81018513612de3578283fd5b8051612df1612b3882613cfc565b8181528381019083850185840285018601891015612e0d578687fd5b8694505b83851015612e38578051612e2481613d47565b835260019490940193918501918501612e11565b50979650505050505050565b60006020808385031215612e56578182fd5b82356001600160401b03811115612e6b578283fd5b8301601f81018513612e7b578283fd5b8035612e89612b3882613cfc565b8181528381019083850185840285018601891015612ea5578687fd5b8694505b83851015612e38578035835260019490940193918501918501612ea9565b60006020808385031215612ed9578182fd5b82356001600160401b03811115612eee578283fd5b8301601f81018513612efe578283fd5b8035612f0c612b3882613cfc565b818152838101908385016101c0808502860187018a1015612f2b578788fd5b8795505b84861015612f5757612f418a83612a8e565b8452600195909501949286019290810190612f2f565b509098975050505050505050565b60006020808385031215612f77578182fd5b82356001600160401b03811115612f8c578283fd5b8301601f81018513612f9c578283fd5b8035612faa612b3882613cfc565b81815283810190838501865b84811015612f5757612fcd8a888435890101612abe565b84529286019290860190600101612fb6565b600060208284031215612ff0578081fd5b81518015158114611ce2578182fd5b600060208284031215613010578081fd5b5035919050565b60006101c08284031215613029578081fd5b611ce28383612a8e565b600060208284031215613044578081fd5b81356001600160401b03811115613059578182fd5b61284784828501612abe565b60006101c08284031215613077578081fd5b611ce28383612b96565b60006101608284031215613093578081fd5b611ce28383612c69565b6000602082840312156130ae578081fd5b5051919050565b600080600080600060a086880312156130cc578283fd5b8535945060208601356130de81613d47565b935060408601356130ee81613d47565b925060608601356130fe81613d47565b9150608086013561310e81613d47565b809150509295509295909350565b6000806040838503121561312e578182fd5b505080516020909101519092909150565b6000815180845260208085019450808401835b838110156131775781516001600160a01b031687529582019590820190600101613152565b509495945050505050565b6000815180845260208085019450808401835b8381101561317757815187529582019590820190600101613195565b600082516131c3818460208701613d1b565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b90565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060408252613269604083018561313f565b90508260208301529392505050565b600060c0825261328b60c083018961313f565b60208301979097525060408101949094526001600160a01b0392831660608501529116608083015260a090910152919050565b6020808252825182820181905260009190848201906040850190845b818110156132f6578351835292840192918401916001016132da565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561334657815180518552860151151586850152928401929085019060010161331f565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561334657815180518552860151868501529284019290850190600101613370565b600060208252611ce26020830184613182565b6000604082526133bb6040830185613182565b82810360208401526133cd8185613182565b95945050505050565b901515815260200190565b90815260200190565b9889526001600160a01b0397881660208a015295871660408901529386166060880152608087019290925260a086015290921660c084015260e08301919091526101008201526101200190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b9b8c5260208c019a909a5260408b01989098526001600160a01b0396871660608b015260808a019590955260a089019390935290841660c088015290921660e08601526101008501919091526101208401526101408301526101608201526101800190565b9788526020880196909652604087019490945260608601929092526001600160a01b0390811660808601521660a084015260c083015260e08201526101000190565b93845260ff9290921660208401526040830152606082015260800190565b6000602082528251806020840152613547816040850160208701613d1b565b601f01601f19169190910160400192915050565b60208082526018908201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604082015260600190565b6020808252601f908201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604082015260600190565b6020808252602e908201527f4f7264657220616d6f756e7420697320746f6f206c6f7720746f20706179207460408201526d68652072656c617965722066656560901b606082015260800190565b6020808252601390820152723737ba16b1b0b63632b216b13c96b6b0b5b2b960691b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600e908201526d1bdc99195c8b58d85b98d95b195960921b604082015260600190565b60208082526035908201527f4c696d69743a20736f75726365546f6b656e20616e6420746172676574546f6b604082015274656e2063616e6e6f74206265207468652073616d6560581b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b602080825260119082015270696e76616c69642d7369676e617475726560781b604082015260600190565b6020808252818101527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604082015261756560f01b606082015260800190565b60208082526017908201527f6465706f7369742d616d6f756e742d7265717569726564000000000000000000604082015260600190565b602080825260149082015273696e73756666696369656e742d62616c616e636560601b604082015260600190565b6020808252600e908201526d0ecc2d8eaca40e8dede40d0d2ced60931b604082015260600190565b60208082526015908201527422b93937b91030b8383937bb34b733903a37b5b2b760591b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252601190820152701a5b9d985b1a590b5c185d1a0b5b185cdd607a1b604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604082015261756560f01b606082015260800190565b6020808252601290820152713330b4b632b216ba3796ba3930b739b332b960711b604082015260600190565b6020808252818101527f536574746c656d656e743a20756e61626c6520746f2073656e642076616c7565604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252600c908201526b1d5b985d5d1a1bdc9a5e995960a21b604082015260600190565b6020808252600d908201526c1bdc99195c8b595e1c1a5c9959609a1b604082015260600190565b60208082526012908201527118d85b1b19590b589e4b58dbdb9d1c9858dd60721b604082015260600190565b6020808252600e908201526d0696e76616c69642d706174682d360941b604082015260600190565b6020808252600f908201526e1b9bcb5bdc99195c8b599a5b1b1959608a1b604082015260600190565b60208082526035908201527f4c696d69743a205f636f6e76657273696f6e50617468206d75737420636f6e7460408201527461696e206174206c65617374203220746f6b656e7360581b606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252600e908201526d185b1c9958591e4b599a5b1b195960921b604082015260600190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606082015260800190565b6020808252601f908201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604082015260600190565b60208082526017908201527f696e73756666696369656e742d616d6f756e742d6f7574000000000000000000604082015260600190565b918252602082015260400190565b92835260208301919091526001600160a01b0316604082015260600190565b6000848252836020830152606060408301526133cd606083018461313f565b968752602087019590955260408601939093526001600160a01b039182166060860152608085015260a08401919091521660c082015260e00190565b6040518181016001600160401b0381118282101715613cf457600080fd5b604052919050565b60006001600160401b03821115613d11578081fd5b5060209081020190565b60005b83811015613d36578181015183820152602001613d1e565b838111156120235750506000910152565b6001600160a01b0381168114611ad657600080fdfea264697066735822122078ebed059c22fb264a64d016251295e526948491ecdf82a26017475384de3ce364736f6c634300060c0033";

export class SettlementLogic__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SettlementLogic> {
    return super.deploy(overrides || {}) as Promise<SettlementLogic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SettlementLogic {
    return super.attach(address) as SettlementLogic;
  }
  connect(signer: Signer): SettlementLogic__factory {
    return super.connect(signer) as SettlementLogic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SettlementLogicInterface {
    return new utils.Interface(_abi) as SettlementLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SettlementLogic {
    return new Contract(address, _abi, signerOrProvider) as SettlementLogic;
  }
}
